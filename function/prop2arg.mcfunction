data remove storage kch:block arg
execute if data storage kch:block properties.age run function block_states:prop {p: age}
execute if data storage kch:block properties.attached run function block_states:prop {p: attached}
execute if data storage kch:block properties.attachment run function block_states:prop {p: attachment}
execute if data storage kch:block properties.axis run function block_states:prop {p: axis}
execute if data storage kch:block properties.berries run function block_states:prop {p: berries}
execute if data storage kch:block properties.bites run function block_states:prop {p: bites}
execute if data storage kch:block properties.bloom run function block_states:prop {p: bloom}
execute if data storage kch:block properties.bottom run function block_states:prop {p: bottom}
execute if data storage kch:block properties.can_summon run function block_states:prop {p: can_summon}
execute if data storage kch:block properties.candles run function block_states:prop {p: candles}
execute if data storage kch:block properties.charges run function block_states:prop {p: charges}
execute if data storage kch:block properties.conditional run function block_states:prop {p: conditional}
execute if data storage kch:block properties.copper_golem_pose run function block_states:prop {p: copper_golem_pose}
execute if data storage kch:block properties.cracked run function block_states:prop {p: cracked}
execute if data storage kch:block properties.crafting run function block_states:prop {p: crafting}
execute if data storage kch:block properties.creaking_heart_state run function block_states:prop {p: creaking_heart_state}
execute if data storage kch:block properties.delay run function block_states:prop {p: delay}
execute if data storage kch:block properties.disarmed run function block_states:prop {p: disarmed}
execute if data storage kch:block properties.distance run function block_states:prop {p: distance}
execute if data storage kch:block properties.down run function block_states:prop {p: down}
execute if data storage kch:block properties.drag run function block_states:prop {p: drag}
execute if data storage kch:block properties.dusted run function block_states:prop {p: dusted}
execute if data storage kch:block properties.east run function block_states:prop {p: east}
execute if data storage kch:block properties.eggs run function block_states:prop {p: eggs}
execute if data storage kch:block properties.enabled run function block_states:prop {p: enabled}
execute if data storage kch:block properties.extended run function block_states:prop {p: extended}
execute if data storage kch:block properties.eye run function block_states:prop {p: eye}
execute if data storage kch:block properties.face run function block_states:prop {p: face}
execute if data storage kch:block properties.facing run function block_states:prop {p: facing}
execute if data storage kch:block properties.flower_amount run function block_states:prop {p: flower_amount}
execute if data storage kch:block properties.half run function block_states:prop {p: half}
execute if data storage kch:block properties.hanging run function block_states:prop {p: hanging}
execute if data storage kch:block properties.has_book run function block_states:prop {p: has_book}
execute if data storage kch:block properties.has_bottle_0 run function block_states:prop {p: has_bottle_0}
execute if data storage kch:block properties.has_bottle_1 run function block_states:prop {p: has_bottle_1}
execute if data storage kch:block properties.has_bottle_2 run function block_states:prop {p: has_bottle_2}
execute if data storage kch:block properties.has_record run function block_states:prop {p: has_record}
execute if data storage kch:block properties.hatch run function block_states:prop {p: hatch}
execute if data storage kch:block properties.hinge run function block_states:prop {p: hinge}
execute if data storage kch:block properties.honey_level run function block_states:prop {p: honey_level}
execute if data storage kch:block properties.hydration run function block_states:prop {p: hydration}
execute if data storage kch:block properties.in_wall run function block_states:prop {p: in_wall}
execute if data storage kch:block properties.instrument run function block_states:prop {p: instrument}
execute if data storage kch:block properties.inverted run function block_states:prop {p: inverted}
execute if data storage kch:block properties.layers run function block_states:prop {p: layers}
execute if data storage kch:block properties.leaves run function block_states:prop {p: leaves}
execute if data storage kch:block properties.level run function block_states:prop {p: level}
execute if data storage kch:block properties.lit run function block_states:prop {p: lit}
execute if data storage kch:block properties.locked run function block_states:prop {p: locked}
execute if data storage kch:block properties.mode run function block_states:prop {p: mode}
execute if data storage kch:block properties.moisture run function block_states:prop {p: moisture}
execute if data storage kch:block properties.natural run function block_states:prop {p: natural}
execute if data storage kch:block properties.north run function block_states:prop {p: north}
execute if data storage kch:block properties.note run function block_states:prop {p: note}
execute if data storage kch:block properties.occupied run function block_states:prop {p: occupied}
execute if data storage kch:block properties.ominous run function block_states:prop {p: ominous}
execute if data storage kch:block properties.open run function block_states:prop {p: open}
execute if data storage kch:block properties.orientation run function block_states:prop {p: orientation}
execute if data storage kch:block properties.part run function block_states:prop {p: part}
execute if data storage kch:block properties.persistent run function block_states:prop {p: persistent}
execute if data storage kch:block properties.pickles run function block_states:prop {p: pickles}
execute if data storage kch:block properties.power run function block_states:prop {p: power}
execute if data storage kch:block properties.powered run function block_states:prop {p: powered}
execute if data storage kch:block properties.rotation run function block_states:prop {p: rotation}
execute if data storage kch:block properties.sculk_sensor_phase run function block_states:prop {p: sculk_sensor_phase}
execute if data storage kch:block properties.segment_amount run function block_states:prop {p: segment_amount}
execute if data storage kch:block properties.shape run function block_states:prop {p: shape}
execute if data storage kch:block properties.short run function block_states:prop {p: short}
execute if data storage kch:block properties.shrieking run function block_states:prop {p: shrieking}
execute if data storage kch:block properties.side_chain run function block_states:prop {p: side_chain}
execute if data storage kch:block properties.signal_fire run function block_states:prop {p: signal_fire}
execute if data storage kch:block properties.slot_0_occupied run function block_states:prop {p: slot_0_occupied}
execute if data storage kch:block properties.slot_1_occupied run function block_states:prop {p: slot_1_occupied}
execute if data storage kch:block properties.slot_2_occupied run function block_states:prop {p: slot_2_occupied}
execute if data storage kch:block properties.slot_3_occupied run function block_states:prop {p: slot_3_occupied}
execute if data storage kch:block properties.slot_4_occupied run function block_states:prop {p: slot_4_occupied}
execute if data storage kch:block properties.slot_5_occupied run function block_states:prop {p: slot_5_occupied}
execute if data storage kch:block properties.snowy run function block_states:prop {p: snowy}
execute if data storage kch:block properties.south run function block_states:prop {p: south}
execute if data storage kch:block properties.stage run function block_states:prop {p: stage}
execute if data storage kch:block properties.thickness run function block_states:prop {p: thickness}
execute if data storage kch:block properties.tilt run function block_states:prop {p: tilt}
execute if data storage kch:block properties.tip run function block_states:prop {p: tip}
execute if data storage kch:block properties.trial_spawner_state run function block_states:prop {p: trial_spawner_state}
execute if data storage kch:block properties.triggered run function block_states:prop {p: triggered}
execute if data storage kch:block properties.type run function block_states:prop {p: type}
execute if data storage kch:block properties.unstable run function block_states:prop {p: unstable}
execute if data storage kch:block properties.up run function block_states:prop {p: up}
execute if data storage kch:block properties.vault_state run function block_states:prop {p: vault_state}
execute if data storage kch:block properties.vertical_direction run function block_states:prop {p: vertical_direction}
execute if data storage kch:block properties.waterlogged run function block_states:prop {p: waterlogged}
execute if data storage kch:block properties.west run function block_states:prop {p: west}
